name: Build and Release Stable

on:
  push:
    # tags:
    #   - "v*"
    branch:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

      - name: Test with cargo
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          toolchain: stable

  build:
    strategy:
      matrix:
        platform: [linux, macos, windows]
        include:
          - platform: linux
            os: ubuntu-latest
          - platform: macos
            os: macos-latest
          - platform: windows
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: matrix.platform == 'linux'
        uses: docker/setup-qemu-action@v2
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Rust aarch64-apple-darwin target
        if: matrix.platform == 'macos'
        run: rustup target add aarch64-apple-darwin

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64

      - name: Keep wheel files
        uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl

  publish-wheels:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USER }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASS }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64

      - uses: actions/download-artifact@v3
        with:
          name: wheelhouse
          path: wheelhouse

      - name: List assets
        run: |
          ls ./wheelhouse/*.whl -al
      - name: Get tag
        id: tag
        run: echo "::set-output name=tag::v$(ls ./wheelhouse/*cp310*manylinux2014_x86_64*.whl | awk -F'[-]' '{print $2}')"

      - name: Display tag
        run: echo "${{ steps.tag.outputs.tag }}"

      - name: Upload wheels
        if: (github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
        run: |
          pip install twine
          echo "Publish to PyPI..."
          twine upload --verbose wheelhouse/*
      - name: Release
        uses: softprops/action-gh-release@v1
        if: (github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
        with:
          files: |
            ./wheelhouse/*.whl
          tag_name: ${{ steps.tag.outputs.tag }}
          prerelease: ${{ contains(steps.tag.outputs.tag, 'rc') }}
          generate_release_notes: true
          target_commitish: ${{ github.sha }}
